---
# third sync wave because it has to be up after mysql
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: ghost-app-set
  namespace: argocd
spec:
  goTemplate: true
  # generator allows us to source specific values from an external k8s secret
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            secret_vars:
              - global_cluster_issuer
              - ghost_hostname
              - ghost_admin_user
              - ghost_admin_email
              - ghost_blog_title
              - ghost_smtp_hostname
              - ghost_smtp_port
              - ghost_smtp_user
              # - ghost_s3_endpoint
  template:
    metadata:
      name: ghost-web-app
      annotations:
        argocd.argoproj.io/sync-wave: "3"
    spec:
      project: ghost
      destination:
        server: https://kubernetes.default.svc
        namespace: ghost
      syncPolicy:
        syncOptions:
          - ApplyOutOfSyncOnly=true
        automated:
          prune: true
          selfHeal: true
      source:
        repoURL: https://small-hack.github.io/ghost-helm-chart
        chart: ghost
        targetRevision: 1.0.1
        helm:
          releaseName: "ghost"
          # https://github.com/small-hack/ghost-helm-chart/blob/main/charts/ghost/values.yaml
          valuesObject:
            fullnameOverride: "ghost"

            ghost:
              # -- public url of the ghost blog
              url: '{{ .ghost_hostname }}'

              # -- title of your ghost blog
              blog_title: '{{ .ghost_blog_title }}'

              # -- enable HTTPS for the ghost blog
              enable_https: ""

              # -- skip install of ghost at pod restart
              skip_bootstrap: ""

              # admin info
              admin:
                # -- admin username. ignored if existingSecret not ""
                username: '{{ .ghost_admin_user }}'
                # -- admin password. ignored if existingSecret not ""
                password: ""
                # -- admin email. ignored if existingSecret not ""
                email: '{{ .ghost_admin_email }}'
                # -- existing kubernetes secret with ghost admin credentials
                # existingSecret: "ghost-admin-credentials"
                # keys in existing kubernetes secret for admin credentials
                secretKeys:
                  # -- Key in existing Kubernetes Secret with the admin username.
                  username: ""
                  # -- Key in existing Kubernetes Secret with the admin password.
                  password: ""
                  # -- Key in existing Kubernetes Secret with the admin email.
                  email: ""

              smtp:
                # -- smtp hostname. ignored if existingSecret not ""
                host: "{{ .ghost_smtp_hostname }}"
                # -- smtp port. ignored if existingSecret not ""
                port: "{{ .ghost_smtp_port }}"
                # -- smtp username. ignored if existingSecret not ""
                username: "{{ .ghost_smtp_user }}"
                # -- smtp password. ignored if existingSecret not ""
                password: ""
                # -- smtp protocol. ignored if existingSecret not ""
                protocol: "tls"
                # -- existing kubernetes secret with ghost smtp credentials
                existingSecret: "ghost-smtp-credentials"
                # keys in existing kubernetes secret for smtp credentials
                secretKeys:
                  # -- Key in existing Kubernetes Secret with the smtp host.
                  host: ""
                  # -- Key in existing Kubernetes Secret with the smtp port.
                  port: ""
                  # -- Key in existing Kubernetes Secret with the smtp protocol.
                  protocol: ""
                  # -- Key in existing Kubernetes Secret with the smtp username.
                  username: ""
                  # -- Key in existing Kubernetes Secret with the smtp password.
                  password: ""

            # Set container requests and limits for different resources like CPU or memory (essential for production workloads)
            # Example:
            # resources:
            #   requests:
            #     cpu: 2
            #     memory: 512Mi
            #   limits:
            #     cpu: 3
            #     memory: 1024Mi
            resources: {}

            ## Configure the ingress resource that allows you to access the Ghost installation
            ingress:
              # Enable ingress record generation for Ghost
              enabled: true

              # Default host for the ingress record
              hostname: '{{ .ghost_hostname }}'

              # Default path for the ingress record
              path: /
              ingressClassName: "nginx"

              # Additional custom annotations for Ghost service
              annotations:
                kubernetes.io/tls-acme: "true"
                cert-manager.io/cluster-issuer: '{{ .global_cluster_issuer }}'

              tls:
                - secretName: ghost-tls
                  hosts:
                    - '{{ .ghost_hostname }}'

            ## Persistence Parameters
            ## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
            persistence:
              # The name of an existing PVC to use for persistence
              existingClaim: "ghost-data"

            # External Database Configuration
            # All of these values are only used if `mysql.enabled=false`
            externalDatabase:
              # External Database server host
              host: localhost
              # External Database server port
              port: 3306
              # External Database username
              user: bn_ghost
              # External Database database name
              database: bitnami_ghost
              # The name of an existing secret with database credentials
              ## NOTE: Must contain key `mysql-password`
              ## NOTE: When it's set, the `externalDatabase.password` parameter is ignored
              existingSecret: ""
              # External Database ssl
              ssl: false
              # External Database ssl CA filepath
              sslCaFile: ""
