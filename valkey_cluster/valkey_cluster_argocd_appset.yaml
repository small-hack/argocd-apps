---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: valkey-cluster-app-set
  namespace: argocd
  annotations:
    # wait till after secrets are populated in sync wave 1
    argocd.argoproj.io/sync-wave: "2"
spec:
  goTemplate: true
  # generator allows us to source specific values from an external k8s secret
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            secret_vars:
              - global_storage_class
  template:
    metadata:
      name: valkey-cluster-app
      annotations:
        argocd.argoproj.io/sync-wave: "2"
    spec:
      project: valkey

      # the sync policy for this Argo CD Application
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - ApplyOutOfSyncOnly=true
        automated:
          prune: true
          selfHeal: true

      # where this Argo CD Application should be deployed
      destination:
        server: https://kubernetes.default.svc
        namespace: valkey

      source:
        repoURL: 'registry-1.docker.io'
        chart: bitnamicharts/valkey-cluster
        targetRevision: 3.0.11
        helm:
          valuesObject:
            global:
              storageClass: "{{ .global_storage_class }}"

            fullnameOverride: "valkey"

            usePassword: true
            existingSecret: "valkey-credentials"
            existingSecretPasswordKey: "password"

            tls:
              enabled: false
              authClients: true
              autoGenerated: false

            service:
              ports:
                valkey: 6379
              type: ClusterIP
              loadBalancerIP: ""
              loadBalancerSourceRanges: []
              externalTrafficPolicy: Cluster

            persistence:
              enabled: true
              path: /bitnami/valkey/data
              annotations: {}
              accessModes:
                - ReadWriteOnce
              size: 8Gi

            persistentVolumeClaimRetentionPolicy:
              enabled: false
              whenScaled: Retain
              whenDeleted: Retain

            valkey:
              updateStrategy:
                type: RollingUpdate
                rollingUpdate:
                  partition: 0

              podManagementPolicy: Parallel
              automountServiceAccountToken: false
              hostNetwork: false
              useAOFPersistence: "yes"

              containerPorts:
                valkey: 6379
                bus: 16379

              # definitions: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
              # Options: nano, micro, small, medium, large, xlarge, 2xlarge
              # default: nano
              resourcesPreset: "micro"

            cluster:
              init: true
              nodes: 6
              replicas: 1
              externalAccess:
                enabled: false
                hostMode: false
                service:
                  disableLoadBalancerIP: false
                  type: LoadBalancer
                  port: 6379
                  loadBalancerIP: []
                  loadBalancerSourceRanges: []

            metrics:
              enabled: false
              resourcesPreset: "nano"
              serviceMonitor:
                enabled: false
