# KubeVirt extends Kubernetes by adding additional virtualization resource types 
# (especially the VM type) through Kubernetes's Custom Resource Definitions API. 
# By using this mechanism, the Kubernetes API can be used to manage these VM resources 
# alongside all other resources Kubernetes provides.
# https://github.com/kubevirt/kubevirt
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kubevirt-operator
  namespace: argocd
spec:
  project: kubevirt
  destination:
    namespace: kubevirt
    server: 'https://kubernetes.default.svc'
  source:
    repoURL: 'https://cloudymax.github.io/kubevirt-community-stack/'
    targetRevision: 0.2.8
    chart: kubevirt
    helm:
      values: |        
        replicaCount: 1
        
        image:
          repository: quay.io/kubevirt/virt-operator
          pullPolicy: IfNotPresent
          tag: "v1.2.0"
        
        imagePullSecrets: []
        nameOverride: ""
        fullnameOverride: ""
        
        serviceAccount:
          create: true
          annotations: {}
          name: "kubevirt-operator"
        
        podAnnotations: {}
        
        podSecurityContext: {}
        
        securityContext:
          privileged: true
        
        resources: {}
        
        nodeSelector: {}
        tolerations:
          - key: CriticalAddonsOnly
            operator: Exists
            
        monitorNamespace: "prometheus"
        prometheus: 
          enabled: true
          serviceName: "prom-stack-kube-prometheus-prometheus"
          serviceNamesapce: "prometheus"
        
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                      - key: kubevirt.io
                        operator: In
                        values:
                          - virt-operator
                  topologyKey: kubernetes.io/hostname
                weight: 1
        
        priorityclass:
          create: true
          value: 1000000000
          
        permittedHostDevices:
          pciHostDevices:
          - pciVendorSelector: "10de:2782"
            resourceName: "nvidia.com/AD104_GeForce_RTX4070Ti"
          - pciVendorSelector: "10de:1e04"
            resourceName: "nvidia.com/TU102_GeForce_RTX2080Ti"
          # - pciVendorSelector: "10de:17fd"
          #   resourceName: "nvidia.com/GM200GL_Tesla_M40"
          mediatedDevices:
          - mdevNameSelector: "GRID M60-2Q"
            resourceName: "nvidia.com/GRID_M60-2Q"
        
        mediatedDevicesTypes:
          - nvidia-18
        
        useEmulation: false
        
        featureGates:
          - ExpandDisks
          - CPUManager
          - GPU
          - HostDevices
          - VMExport
          - HotplugVolumes
          - HostDisk
          - Macvtap
          - Passt
          - HotplugNICs
          - clientPassthrough
          - Snapshot
          - CPUNodeDiscovery
  sources: []
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
    syncOptions:
      - CreateNamespace=false

