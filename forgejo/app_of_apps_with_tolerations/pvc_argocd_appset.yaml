---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: forgejo-pvc-appset
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  goTemplate: true
  # generator allows us to source specific values from an external k8s secret
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            secret_vars:
              - global_pvc_storage_class
              - forgejo_pvc_capacity
              - forgejo_pvc_backup_schedule
              - forgejo_s3_backup_endpoint
              - forgejo_s3_backup_bucket
              - forgejo_s3_backup_region
              - forgejo_toleration_key
              - forgejo_toleration_operator
              - forgejo_toleration_value
              - forgejo_toleration_effect
              - forgejo_affinity_key
              - forgejo_affinity_value
  template:
    metadata:
      name: forgejo-pvc
      annotations:
        argocd.argoproj.io/sync-wave: "1"
    spec:
      project: forgejo
      destination:
        server: "https://kubernetes.default.svc"
        namespace: forgejo
      syncPolicy:
        syncOptions:
          - ApplyOutOfSyncOnly=true
        automated:
          prune: true
          selfHeal: true
      source:
        repoURL: https://github.com/small-hack/argocd-apps.git
        path: forgejo/storage/pvc/
        targetRevision: main
        helm:
          valuesObject:
            pvc_capacity: '{{ .forgejo_pvc_capacity }}'
            pvc_storageClassName: '{{ .global_pvc_storage_class }}'

            # not in use yet
            k8up:
              # -- for setting tolerations of node taints
              tolerations:
                - key: '{{ .forgejo_toleration_key }}'
                  operator: '{{ .forgejo_toleration_operator }}'
                  value: '{{ .forgejo_toleration_value }}'
                  effect: '{{ .forgejo_toleration_effect }}'

              # -- for setting affinity to a specific node by matchExpressions
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                        - key: '{{ .forgejo_affinity_key }}'
                          operator: In
                          values:
                            - '{{ .forgejo_affinity_value }}'

              backup_name: 'forgejo-nightly-backup'

              # -- can be set to 's3' or 'local'
              backup_type: 's3'

              s3:
                bucket: '{{ .forgejo_s3_backup_bucket }}'
                endpoint: '{{ .forgejo_s3_backup_endpoint }}'
                accessKeyIDSecretRef:
                  name: 's3-backups-credentials'
                  key: 'accessKeyId'
                  optional: false
                secretAccessKeySecretRef:
                  name: 's3-backups-credentials'
                  key: 'secretAccessKey'
                  optional: false

              repoPasswordSecretRef:
                name: 's3-backups-credentials'
                key: 'resticRepoPassword'

              prometheus_url: 'push-gateway.monitoring.svc:9091'

              schedules:
                backup: '{{ .forgejo_pvc_backup_schedule }}'
                check: '0 0 * * *'
                prune: '0 0 * * *'
