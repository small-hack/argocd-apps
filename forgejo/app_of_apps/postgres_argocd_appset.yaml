---
# webapp is deployed 2nd because we need secrets and persistent volumes up 1st
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: forgejo-postgres-app-set
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  goTemplate: true
  # generator allows us to source specific values from an external k8s secret
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            secret_vars:
              - forgejo_s3_endpoint
              - forgejo_postgres_backup_schedule
  template:
    metadata:
      name: forgejo-postgres-cluster
      namespace: forgejo
      annotations:
        argocd.argoproj.io/sync-wave: "2"
    spec:
      project: forgejo

      destination:
        server: "https://kubernetes.default.svc"
        namespace: forgejo

      syncPolicy:
        syncOptions:
          - ApplyOutOfSyncOnly=true
        automated:
          prune: true
          selfHeal: true

      source:
        # repoURL: https://small-hack.github.io/cloudnative-pg-cluster-chart
        # chart: cnpg-cluster
        repoURL: https://cloudnative-pg.github.io/charts
        chart: cluster
        targetRevision: 0.3.1
        helm:
          releaseName: forgejo-postgres-cluster
          # https://github.com/cloudnative-pg/charts/blob/main/charts/cluster/values.yaml
          valuesObject:
            type: postgresql

            fullnameOverride: forgejo-postgres

            cluster:
              instances: 2

              # annotations for the cluster object
              annotations:
                cnpg.io/skipEmptyWalArchiveCheck: enabled

              # initdb for postgresql in the cluster object
              initdb:
                database: forgejo
                owner: forgejo
                secret:
                  name: forgejo-pgsql-credentials

              # enable monitoring for the cluster
              monitoring:
                enabled: true
                podMonitor:
                  enabled: true

            backups:
              # backups are disabled by default. This enables them
              enabled: true
              # Overrides the provider specific default endpoint. Defaults to:
              # S3: https://s3.<region>.amazonaws.com"
              endpointURL: "https://{{ .forgejo_s3_endpoint }}"
              # Overrides the provider specific default path
              destinationPath: "s3://forgejo-postgres"

              # -- One of `s3`, `azure` or `google`
              provider: s3

              s3:
                region: auto
                bucket: forgejo-postgres

              # existing secret for the s3 credentials
              secret:
                create: false
                name: s3-postgres-credentials

              # wal backup details
              wal:
                compression: gzip
                maxParallel: 8
                encryption: AES256

              # -- Retention policy for backups
              retentionPolicy: "2d"

              scheduledBackups:
                - name: forgejo-pg-backup
                  schedule: '{{ .forgejo_postgres_backup_schedule }}'
                  # Midnight daily backups for postgres data
                  backupOwnerReference: self
                  # Backup method: barmanObjectStore or volumeSnapshot
                  method: barmanObjectStore

            postgresql:
              pg_hba:
                - host all all 0.0.0.0/0 md5
                #- hostnossl all all 0.0.0.0/0 reject
                #- hostssl forgejo forgejo 0.0.0.0/0 scram-sha-256 clientcert=verify-full
