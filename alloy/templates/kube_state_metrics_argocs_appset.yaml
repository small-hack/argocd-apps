---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: kube-state-metrics-appset
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  goTemplate: true
  # generator allows us to source specific values from an external secret
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            secret_vars:
              - global_cluster_issuer
  template:
    metadata:
      name: kube-state-metrics

    spec:
      project: monitoring
      syncPolicy:
        syncOptions:
          - ApplyOutOfSyncOnly=true
        automated:
          selfHeal: true
          prune: true

      # where to deploy this application
      destination:
        server: https://kubernetes.default.svc
        namespace: monitoring

      # where to source this application from
      source:
        # https://github.com/grafana/alloy/tree/main/operations/helm/charts/alloy
        repoURL: https://prometheus-community.github.io/helm-charts
        chart: kube-state-metrics
        targetRevision: 6.4.0
        helm:
          releaseName: kube-state-metrics
          valuesObject:
            # Default values for kube-state-metrics.
            prometheusScrape: false

            # If set to true, this will deploy kube-state-metrics as a StatefulSet and the data
            # will be automatically sharded across <.Values.replicas> pods using the built-in
            # autodiscovery feature: https://github.com/kubernetes/kube-state-metrics#automated-sharding
            # This is an experimental feature and there are no stability guarantees.
            autosharding:
              enabled: false

            replicas: 1

            ## set to true to add the release label so scraping of the servicemonitor with kube-prometheus-stack works out of the box
            releaseLabel: true

            prometheus:
              monitor:
                enabled: true

