# installs alloy
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: alloy-metrics-appset
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  goTemplate: true
  # generator allows us to source specific values from an external secret
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            secret_vars:
              - global_cluster_issuer
              - nextcloud_toleration_key
              - nextcloud_toleration_operator
              - nextcloud_toleration_value
              - nextcloud_toleration_effect
  template:
    metadata:
      name: alloy-metrics

    spec:
      project: monitoring
      syncPolicy:
        syncOptions:
          - ApplyOutOfSyncOnly=true
        automated:
          selfHeal: true
          prune: true

      # where to deploy this application
      destination:
        server: https://kubernetes.default.svc
        namespace: monitoring

      # where to source this application from
      source:
        # https://github.com/grafana/alloy/tree/main/operations/helm/charts/alloy
        repoURL: https://grafana.github.io/helm-charts
        chart: alloy
        targetRevision: 1.2.1
        helm:
          releaseName: alloy-metrics
          valuesObject:
            fullnameOverride: alloy-metrics

            alloy:
              # Enables sending Grafana Labs anonymous usage stats to help
              # improve Grafana Alloy.
              enableReporting: false

              configMap:
                # Create a new ConfigMap for the config file.
                create: false
                # Name of existing ConfigMap to use. Used when create is false.
                name: alloy-metrics-cfg
                # Key in ConfigMap to get config from.
                key: config.alloy

              clustering:
                # Deploy Alloy in a cluster to allow for load distribution.
                enabled: true
                # Name for the Alloy cluster. Used for differentiating between clusters.
                name: ""
                # Name for the port used for clustering, useful if running inside an Istio Mesh
                portName: http

              securityContext:
                runAsUser: 473
                runAsGroup: 473

              extraPorts:
              - name: otlp-grpc
                port: 4317
                targetPort: 4317
                protocol: TCP
              - name: otlp-http
                port: 4318
                targetPort: 4318
                protocol: TCP

            # Options for the extra controller used for config reloading.
            configReloader:
              # Enables automatically reloading when the Alloy config changes.
              enabled: true
              # Resource requests and limits to apply to the config reloader container.
              resources:
                requests:
                  cpu: "10m"
                  memory: "50Mi"
              # Security context to apply to the Grafana configReloader container.
              securityContext:
                # this is the UID of the "nobody" user that the configReloader image runs as
                runAsUser: 65534
                runAsGroup: 65534

            controller:
              # Must be one of 'daemonset', 'deployment', or 'statefulset'.
              type: 'deployment'
              # Number of pods to deploy.
              replicas: 4

            tolerations:
              - key: '{{ .nextcloud_toleration_key }}'
                operator: '{{ .nextcloud_toleration_operator }}'
                value: '{{ .nextcloud_toleration_value }}'
                effect: '{{ .nextcloud_toleration_effect }}'

            networkPolicy:
              enabled: false
              flavor: kubernetes

              policyTypes:
                - Ingress
                - Egress

              # Default allow all traffic because Alloy is so configurable
              # It is recommended to change this before deploying to production
              # To disable each policyType, set value to `null`
              ingress:
                - {}
              egress:
                - {}

            serviceMonitor:
              enabled: false
              # Additional labels for the service monitor.
              additionalLabels: {}
              # Scrape interval. If not set, the Prometheus default scrape interval is used.
              interval: ""

