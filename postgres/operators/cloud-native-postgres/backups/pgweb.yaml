---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-client
  namespace: mastodon
  labels:
    app.kubernetes.io/name: postgres-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres-client
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres-client
    spec:
      restartPolicy: Always
      containers:
        - name: pgweb
          image: sosedoff/pgweb:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: PGSSLCERT
              value: "/etc/secrets/app/tls.crt"
            - name: PGSSLKEY
              value: "/etc/secrets/app/tls.key"
            - name: PGSSLROOTCERT
              value: "/etc/secrets/ca/ca.crt"
            - name: PGSSLMODE
              value: "verify-full"
            - name: PGDATABASE
              value: "mastodon"
            - name: PGUSER
              value: "mastodon"
            - name: PGHOST
              value: "mastodon-postgres-rw"
            - name: PGPORT
              value: "5432"
          ports:
            - containerPort: 8081
              name: "http"
          volumeMounts:
            - name: secret-volume-root-ca
              mountPath: /etc/secrets/ca
            - name: secret-volume-app
              mountPath: /etc/secrets/app
      volumes:
        - name: secret-volume-root-ca
          secret:
            secretName: mastodon-postgres-server-ca-key-pair
            defaultMode: 384
        - name: secret-volume-app
          secret:
            secretName: mastodon-postgres-mastodon-cert
            defaultMode: 384
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        #fsGroup: 2000
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-client
spec:
  selector:
    app.kubernetes.io/name: postgres-client
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8081
