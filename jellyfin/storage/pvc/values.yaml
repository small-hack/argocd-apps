media_pvc:
  # -- enable jellyfin media pvc
  enabled: "true"
  # -- default storage class name to use for media pvc
  storageClassName: "local-path"
  # -- default access mode for the media pvc
  accessMode: "ReadWriteOnce"
  # -- storage capacity for the jellyfin media pvc
  storage: "100Gi"

config_pvc:
  # -- enable jellyfin configuration pvc
  enabled: "true"
  # -- default storage class name to use for config pvc
  storageClassName: "local-path"
  # -- default access mode for the config pvc
  accessMode: "ReadWriteOnce"
  # -- storage capacity for the jellyfin config pvc
  storage: "2Gi"

web_pvc:
  # -- enable jellyfin web pvc
  enabled: "false"
  # -- default storage class name to use for web pvc
  storageClassName: "local-path"
  # -- default access mode for the web pvc
  accessMode: "ReadWriteOnce"
  # -- storage capacity for the jellyfin web pvc
  storage: "1Gi"

# -- tolerate affinity
affinity: {}

# -- tolerate taints
tolerations: []

# for enabling backups to a remote s3 provider or local disk backup
k8up:
  # -- for setting tolerations of node taints
  tolerations:
    key: ""
    operator: ""
    value: ""
    effect: ""
  # -- for setting affinity to a specific node by matchExpressions
  affinity:
    key: ""
    value: ""

  # -- set the pod security context for the backup job
  securityContext:
    runAsUser: 0

  backup_name: "jellyfin-nightly"

  # -- can be set to 's3' or 'local'
  backup_type: "s3"

  s3:
    # -- s3 bucket to backup to
    bucket: ''
    # -- s3 endpoint to backup to
    endpoint: ''
    # secret info to use for your s3 accessKeyId
    accessKeyIDSecretRef:
      # -- name of the secret to use
      name: ''
      # -- key in the secret to use for access key id
      key: ''
      optional: false
    # secret info to use for your s3 secretAccessKey
    secretAccessKeySecretRef:
      # -- name of the secret to use
      name: ''
      # -- key in the secret to use for secret access key
      key: ''
      optional: false

  local:
    mountPath: ''

  # -- secret for your restic repo
  repoPasswordSecretRef:
    # -- name of the secret to use
    name: ''
    # -- key in secret to use for repo password
    key: ''

  # -- url to push to for prometheus gateway
  prometheus_url: ''

  # -- user to run the backups as
  podSecurityContext:
    runAsUser: 0

  # -- schedules for backups, checks, and prunes
  schedules:
    backup: ''
    check: ''
    prune: ''
