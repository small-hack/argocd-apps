---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: nextcloud-s3-pvc-app-set
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  goTemplate: true
  # generator allows us to source specific values from an external k8s secret
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            secret_vars:
              - nextcloud_s3_provider
              - nextcloud_s3_backup_endpoint
              - nextcloud_s3_backup_bucket
              - nextcloud_s3_backup_region
              - nextcloud_s3_pvc_capacity
              - nextcloud_pvc_backup_schedule
              - nextcloud_s3_pvc_storage_class
              - nextcloud_toleration_key
              - nextcloud_toleration_operator
              - nextcloud_toleration_value
              - nextcloud_toleration_effect
              - nextcloud_affinity_key
              - nextcloud_affinity_value

  template:
    metadata:
      name: nextcloud-s3-pvc
      annotations:
        argocd.argoproj.io/sync-wave: "1"
    spec:
      project: nextcloud
      destination:
        server: "https://kubernetes.default.svc"
        namespace: nextcloud
      syncPolicy:
        syncOptions:
          - ApplyOutOfSyncOnly=true
        automated:
          prune: true
          selfHeal: true
      source:
        repoURL: https://github.com/small-hack/argocd-apps.git
        path: s3_persistence_and_backups/
        targetRevision: main
        helm:
          valuesObject:
            app: nextcloud
            provider: '{{ .nextcloud_s3_provider }}'
            pvc_capacity: '{{ .nextcloud_s3_pvc_capacity }}'
            pvc_storageClassName: '{{ .nextcloud_s3_pvc_storage_class }}'

            tolerations:
              - key: '{{ .nextcloud_toleration_key }}'
                operator: '{{ .nextcloud_toleration_operator }}'
                value: '{{ .nextcloud_toleration_value }}'
                effect: '{{ .nextcloud_toleration_effect }}'

            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                    - matchExpressions:
                      - key: '{{ .nextcloud_affinity_key }}'
                        operator: In
                        values:
                          - '{{ .nextcloud_affinity_value }}'

            seaweedfs:
              # -- deploy a master data PVC for seaweedfs
              master_pvc: false

            k8up:
              # -- user to run the backups as
              securityContext:
                runAsUser: 0

              backup_name: 'nextcloud-nightly-backup'

              # -- can be set to 's3' or 'local'
              backup_type: 's3'

              s3:
                bucket: '{{ .nextcloud_s3_backup_bucket }}'
                endpoint: '{{ .nextcloud_s3_backup_endpoint }}'
                accessKeyIDSecretRef:
                  name: 's3-backups-credentials'
                  key: 'accessKeyId'
                  optional: false
                secretAccessKeySecretRef:
                  name: 's3-backups-credentials'
                  key: 'secretAccessKey'
                  optional: false

              repoPasswordSecretRef:
                name: 's3-backups-credentials'
                key: 'resticRepoPassword'

              prometheus_url: 'push-gateway.monitoring.svc:9091'

              schedules:
                backup: '{{ .nextcloud_pvc_backup_schedule }}'
                check: '0 0 * * *'
                prune: '0 0 * * *'
