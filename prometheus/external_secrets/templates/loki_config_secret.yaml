---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: loki-config
spec:
  target:
    # Name for the secret to be created on the cluster
    name: loki-config
    deletionPolicy: Delete
    template:
      engineVersion: v2
      data:
        config.yaml: |-
          auth_enabled: false

          chunk_store_config:
            max_look_back_period: 0s

          common:
            compactor_address: {{ `{{ .compactor_address }}` }}

          compactor:
            shared_store: s3
            working_directory: /var/loki/compactor
            compactor_ring:
              kvstore:
                store: memberlist

          distributor:
            ring:
              kvstore:
                store: memberlist

          frontend:
            compress_responses: true
            log_queries_longer_than: 5s
            tail_proxy_url: {{ `{{ .tail_proxy_url }}` }}
            grpc_client_config:
              grpc_compression: snappy

          frontend_worker:
            frontend_address: {{ `{{ .frontend_address }}` }}
            grpc_client_config:
              grpc_compression: snappy

          ingester:
            chunk_block_size: 262144
            chunk_encoding: snappy
            chunk_idle_period: 30m
            chunk_retain_period: 1m
            lifecycler:
              ring:
                kvstore:
                  store: memberlist
                replication_factor: 1
            max_transfer_retries: 0
            wal:
              dir: /var/loki/wal

          ingester_client:
            remote_timeout: 5s
            pool_config:
              client_cleanup_period: 15s
              health_check_ingesters: true
              remote_timeout: 5s

            grpc_client_config:
              grpc_compression: gzip

          limits_config:
            enforce_metric_name: false
            max_cache_freshness_per_query: 10m
            split_queries_by_interval: 15m
            ingestion_rate_mb: 128
            ingestion_burst_size_mb: 256
            reject_old_samples: false
            reject_old_samples_max_age: 1w
            per_stream_rate_limit: 32MB
            per_stream_rate_limit_burst: 64MB
            volume_enabled: true

          memberlist:
            cluster_label: loki-distributed.monitoring
            bind_addr: []
            join_members:
              - loki-memberlist
              - loki-distributed-memberlist

          query_range:
            align_queries_with_step: true
            cache_results: true
            max_retries: 5
            results_cache:
              cache:
                embedded_cache:
                  enabled: true
                  ttl: 24h

          query_scheduler:
            grpc_client_config:
              grpc_compression: snappy

          ruler:
            # alertmanager v1 api is depricated. See https://github.com/grafana/loki/issues/12859
            enable_alertmanager_v2: true
            storage:
              type: local
              local:
                directory: /etc/loki/rules

            rule_path: /tmp/loki/scratch
            alertmanager_url: {{ `{{ .alertmanager_url }}` }}
            external_url: {{ `{{ .ruler_external_url }}` }}
            ring:
              kvstore:
                store: memberlist
            enable_api: true

            wal:
              dir: /tmp/loki/wal
              truncate_frequency: 1h
              min_age: 5m
              max_age: 4h

            wal_cleaner:
              min_age: 24h
              period: 0s

            remote_write:
              enabled: true
              clients:
                thanos:
                  url: http://thanos-receive.monitoring.svc:19291/api/v1/receive

          runtime_config:
            file: /var/loki-distributed-runtime/runtime.yaml

          schema_config:
            configs:
            - from: 2023-10-20
              store: tsdb
              object_store: aws
              schema: v13
              index:
                prefix: index_
                period: 24h

          server:
            grpc_server_max_concurrent_streams: 0
            grpc_server_max_recv_msg_size: 8388608
            grpc_server_max_send_msg_size: 8388608
            http_listen_port: 3100
            http_server_read_timeout: 60s
            http_server_write_timeout: 60s
            log_level: debug

          table_manager:
            retention_deletes_enabled: true
            retention_period: 30d

          storage_config:
            tsdb_shipper:
              active_index_directory: /var/loki/data/tsdb-index
              cache_location: /var/loki/data/tsdb-cache
            aws:
              bucketnames: {{ `{{ .bucket }}` }}
              endpoint: {{ `{{ .endpoint }}` }}
              region: {{ `{{ .region }}` }}
              access_key_id: {{ `{{ .accessKey }}` }}
              secret_access_key: {{ `{{ .secretKey }}` }}
              s3forcepathstyle: false
            filesystem:
              directory: /var/loki/data/loki/chunks

  data:
    - secretKey: bucket
      sourceRef:
        storeRef:
          name: bitwarden-fields
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.lokiConfigBitwardenID }}
        property: bucket

    - secretKey: endpoint
      sourceRef:
        storeRef:
          name: bitwarden-fields
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.lokiConfigBitwardenID }}
        property: endpoint

    - secretKey: region
      sourceRef:
        storeRef:
          name: bitwarden-fields
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.lokiConfigBitwardenID }}
        property: region

    - secretKey: accessKey
      sourceRef:
        storeRef:
          name: bitwarden-fields
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.lokiConfigBitwardenID }}
        property: access_key

    - secretKey: secretKey
      sourceRef:
        storeRef:
          name: bitwarden-fields
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.lokiConfigBitwardenID }}
        property: secret_key

    - secretKey: compactor_address
      sourceRef:
        storeRef:
          name: bitwarden-fields
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.lokiConfigBitwardenID }}
        property: compactor_address

    - secretKey: frontend_address
      sourceRef:
        storeRef:
          name: bitwarden-fields
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.lokiConfigBitwardenID }}
        property: frontend_address

    - secretKey: tail_proxy_url
      sourceRef:
        storeRef:
          name: bitwarden-fields
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.lokiConfigBitwardenID }}
        property: tail_proxy_url

    - secretKey: alertmanager_url
      sourceRef:
        storeRef:
          name: bitwarden-fields
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.lokiConfigBitwardenID }}
        property: alertmanager_url

    - secretKey: ruler_external_url
      sourceRef:
        storeRef:
          name: bitwarden-fields
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.lokiConfigBitwardenID }}
        property: ruler_external_url
