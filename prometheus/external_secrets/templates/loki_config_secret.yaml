---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: loki-config
spec:
  target:
    # Name for the secret to be created on the cluster
    name: loki-config
    deletionPolicy: Delete
    template:
      engineVersion: v2
      data:
        config.yaml: |-
          auth_enabled: false

          bloom_build:
            enabled: false
            builder:
              planner_address: loki-distributed-bloom-planner-headless.monitoring.svc.cluster.local:9095

          bloom_gateway:
            enabled: false
            client:
              addresses: dnssrvnoa+_grpc._tcp.loki-distributed-bloom-gateway-headless.monitoring.svc.cluster.local

          chunk_store_config:
            chunk_cache_config:
              background:
                writeback_buffer: 500000
                writeback_goroutines: 1
                writeback_size_limit: 500MB
              default_validity: 0s
              memcached:
                batch_size: 4
                parallelism: 5
              memcached_client:
                addresses: dnssrvnoa+_memcached-client._tcp.loki-distributed-chunks-cache.monitoring.svc
                consistent_hash: true
                max_idle_conns: 72
                timeout: 2000ms

          common:
            compactor_address: 'http://loki-distributed-compactor:3100'
            path_prefix: /var/loki
            replication_factor: 3
            storage:
              s3:
                access_key_id: {{ `{{ .accessKey }}` }}
                bucketnames: {{ `{{ .bucket }}` }}
                endpoint: {{ `{{ .endpoint }}` }}
                region: {{ `{{ .region }}` }}
                insecure: false
                s3forcepathstyle: false
                secret_access_key: {{ `{{ .secretKey }}` }}

          frontend:
            compress_responses: true
            log_queries_longer_than: 5s
            scheduler_address: loki-distributed-query-scheduler.monitoring.svc.cluster.local:9095
            tail_proxy_url: http://loki-distributed-querier.monitoring.svc.cluster.local:3100
            grpc_client_config:
              grpc_compression: snappy

          frontend_worker:
            scheduler_address: loki-distributed-query-scheduler.monitoring.svc.cluster.local:9095
            grpc_client_config:
              grpc_compression: snappy

          index_gateway:
            mode: simple

          ingester:
            chunk_encoding: snappy
            chunk_block_size: 262144
            chunk_idle_period: 30m
            chunk_retain_period: 1m
            wal:
              dir: /var/loki/wal

          limits_config:
            max_cache_freshness_per_query: 10m
            split_queries_by_interval: 15m
            ingestion_rate_mb: 128
            ingestion_burst_size_mb: 256
            reject_old_samples: false
            reject_old_samples_max_age: 1w
            per_stream_rate_limit: 32MB
            per_stream_rate_limit_burst: 64MB
            volume_enabled: true

          memberlist:
            join_members:
            - loki-memberlist

          pattern_ingester:
            enabled: false

          querier:
            max_concurrent: 4

          query_range:
            align_queries_with_step: true
            cache_results: true
            results_cache:
              cache:
                background:
                  writeback_buffer: 500000
                  writeback_goroutines: 1
                  writeback_size_limit: 500MB
                default_validity: 12h
                memcached_client:
                  addresses: dnssrvnoa+_memcached-client._tcp.loki-distributed-results-cache.monitoring.svc
                  consistent_hash: true
                  timeout: 500ms
                  update_interval: 1m

          ruler:
            enable_alertmanager_v2: true
            storage:
              type: local
              local:
                directory: /etc/loki/rules
            rule_path: /tmp/loki/scratch
            alertmanager_url: {{ `{{ .alertmanager_url }}` }}
            external_url: {{ `{{ .ruler_external_url }}` }}
            enable_api: true
            wal:
              dir: /var/loki/ruler-wal
              truncate_frequency: 1h
              min_age: 5m
              max_age: 4h
            wal_cleaner:
              min_age: 24h
              period: 0s
            remote_write:
              enabled: true
              clients:
                thanos:
                  url: http://thanos-receive.monitoring.svc:19291/api/v1/receive

          runtime_config:
            file: /etc/loki/runtime-config/runtime-config.yaml

          schema_config:
            configs:
            - from: "2024-04-01"
              index:
                period: 24h
                prefix: loki_index_
              object_store: s3
              schema: v13
              store: tsdb

          server:
            grpc_server_max_concurrent_streams: 0
            grpc_server_max_recv_msg_size: 8388608
            grpc_server_max_send_msg_size: 8388608
            http_listen_port: 3100
            http_server_read_timeout: 60s
            http_server_write_timeout: 60s
            log_level: debug

          storage_config:
            bloom_shipper:
              working_directory: /var/loki/data/bloomshipper
            boltdb_shipper:
              index_gateway_client:
                server_address: dns+loki-distributed-index-gateway-headless.monitoring.svc.cluster.local:9095
            hedging:
              at: 250ms
              max_per_second: 20
              up_to: 3
            aws:
              bucketnames: {{ `{{ .bucket }}` }}
              endpoint: {{ `{{ .endpoint }}` }}
              region: {{ `{{ .region }}` }}
              access_key_id: {{ `{{ .accessKey }}` }}
              secret_access_key: {{ `{{ .secretKey }}` }}
              s3forcepathstyle: false
            filesystem:
              directory: /var/data/loki/chunks
            tsdb_shipper:
              index_gateway_client:
                server_address: dns+loki-distributed-index-gateway-headless.monitoring.svc.cluster.local:9095

          tracing:
            enabled: false

          ui:
            enabled: true
            discovery:
              join_peers:
              - loki-distributed-query-frontend.monitoring.svc.cluster.local


  data:
    - secretKey: bucket
      sourceRef:
        storeRef:
          name: bitwarden-fields
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.lokiConfigBitwardenID }}
        property: bucket

    - secretKey: endpoint
      sourceRef:
        storeRef:
          name: bitwarden-fields
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.lokiConfigBitwardenID }}
        property: endpoint

    - secretKey: region
      sourceRef:
        storeRef:
          name: bitwarden-fields
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.lokiConfigBitwardenID }}
        property: region

    - secretKey: accessKey
      sourceRef:
        storeRef:
          name: bitwarden-fields
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.lokiConfigBitwardenID }}
        property: access_key

    - secretKey: secretKey
      sourceRef:
        storeRef:
          name: bitwarden-fields
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.lokiConfigBitwardenID }}
        property: secret_key

    - secretKey: compactor_address
      sourceRef:
        storeRef:
          name: bitwarden-fields
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.lokiConfigBitwardenID }}
        property: compactor_address

    - secretKey: frontend_address
      sourceRef:
        storeRef:
          name: bitwarden-fields
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.lokiConfigBitwardenID }}
        property: frontend_address

    - secretKey: tail_proxy_url
      sourceRef:
        storeRef:
          name: bitwarden-fields
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.lokiConfigBitwardenID }}
        property: tail_proxy_url

    - secretKey: alertmanager_url
      sourceRef:
        storeRef:
          name: bitwarden-fields
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.lokiConfigBitwardenID }}
        property: alertmanager_url

    - secretKey: ruler_external_url
      sourceRef:
        storeRef:
          name: bitwarden-fields
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.lokiConfigBitwardenID }}
        property: ruler_external_url
