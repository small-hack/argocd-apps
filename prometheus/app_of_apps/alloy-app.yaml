apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: alloy-app
  namespace: argocd
spec:
  project: default
  syncPolicy:
    automated:
      selfHeal: true
    syncOptions:
      - ApplyOutOfSyncOnly=true
  destination:
    server: "https://kubernetes.default.svc"
    namespace: monitoring
  source:
    repoURL: 'https://grafana.github.io/helm-charts'
    chart: alloy
    targetRevision: 0.10.1
    helm:
      version: v3
      skipCrds: true
      valuesObject:
        fullnameOverride: alloy
        alloy:
          configMap:
            content: |-
              logging {
                level = "debug"
                format = "logfmt"
              }

              discovery.kubernetes "pods" {
                role = "pod"
              }

              discovery.relabel "pod_logs" {
                targets = discovery.kubernetes.pods.targets

                rule {
                  source_labels = ["__meta_kubernetes_namespace"]
                  target_label  = "namespace"
                  action        = "replace"
                }

                rule {
                  source_labels = ["__meta_kubernetes_pod_name"]
                  action = "replace"
                  target_label = "pod"
                }

                rule {
                  source_labels = ["__meta_kubernetes_pod_container_name"]
                  action = "replace"
                  target_label = "container"
                }

                rule {
                  source_labels = ["__meta_kubernetes_pod_label_app_kubernetes_io_name"]
                  action = "replace"
                  target_label = "app"
                }

                rule {
                  source_labels = ["__meta_kubernetes_namespace", "__meta_kubernetes_pod_container_name"]
                  action = "replace"
                  target_label = "job"
                  separator = "/"
                  replacement = "$1"
                }

                rule {
                  source_labels = ["__meta_kubernetes_pod_uid", "__meta_kubernetes_pod_container_name"]
                  action = "replace"
                  target_label = "__path__"
                  separator = "/"
                  replacement = "/var/log/pods/*$1/*.log"
                }

                rule {
                  source_labels = ["__meta_kubernetes_pod_container_id"]
                  action = "replace"
                  target_label = "container_runtime"
                  regex = "^(\\S+):\\/\\/.+$"
                  replacement = "$1"
                }

              }

              loki.source.kubernetes "pod_logs" {
                targets    = discovery.relabel.pod_logs.output
                forward_to = [loki.process.pod_logs.receiver]
              }

              loki.process "pod_logs" {
                stage.static_labels {
                    values = {
                      cluster = "${cluster_name}",
                    }
                }

                forward_to = [loki.write.loki.receiver]
              }

              loki.write "loki" {
                endpoint {
                  url = "http://loki-distributor.monitoring.svc.cluster.local:3100/loki/api/v1/push"
                }
              }

              loki.echo "example" { }
