apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: thanos-app
  namespace: argocd
spec:
  project: default
  destination:
    server: "https://kubernetes.default.svc"
    namespace: monitoring
  source:
    repoURL: registry-1.docker.io
    chart: bitnamicharts/thanos
    targetRevision: 17.0.2
    helm:
      version: v3
      skipCrds: true
      valuesObject:
        fullnameOverride: thanos
        existingObjstoreSecret: thanos-objstore-config

        https:
          enabled: false

        ########################################################################
        #   ___
        #  / _ \ _   _  ___ _ __ _   _
        # | | | | | | |/ _ \ '__| | | |
        # | |_| | |_| |  __/ |  | |_| |
        #  \__\_\\__,_|\___|_|   \__, |
        #                        |___/
        ########################################################################
        query:
          # Only for SideCar
          dnsDiscovery: {}
          #  sidecarsService: "prometheus-operated"
          #  sidecarsNamespace: "prometheus"

          logFormat: json

          autoscaling:
            enabled: true
            minReplicas: "1"
            maxReplicas: "4"
            targetCPU: 70
            targetMemory: 80

          extraEnvVars:
            - name: "THANOS_ALLOW_EXISTING_BUCKET_USE"
              value: "true"

          resources:
            requests:
              cpu: 250m
              memory: 128Mi
            limits:
              cpu: 1
              memory: 2048Mi

          revisionHistoryLimit: 2

        ########################################################################
        #   ___                          _____                _                 _
        #  / _ \ _   _  ___ _ __ _   _  |  ___| __ ___  _ __ | |_ ___ _ __   __| |
        # | | | | | | |/ _ \ '__| | | | | |_ | '__/ _ \| '_ \| __/ _ \ '_ \ / _` |
        # | |_| | |_| |  __/ |  | |_| | |  _|| | | (_) | | | | ||  __/ | | | (_| |
        #  \__\_\\__,_|\___|_|   \__, | |_|  |_|  \___/|_| |_|\__\___|_| |_|\__,_|
        #                        |___/
        ########################################################################
        queryFrontend:
          ingress:
            enabled: false

          logFormat: json

          autoscaling:
            enabled: true
            minReplicas: "1"
            maxReplicas: "4"
            targetCPU: 70
            targetMemory: 80

          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 1
              memory: 2048Mi

          revisionHistoryLimit: 2

        ########################################################################
        #  ____             _        _ __        __   _
        # | __ ) _   _  ___| | _____| |\ \      / /__| |__
        # |  _ \| | | |/ __| |/ / _ \ __\ \ /\ / / _ \ '_ \
        # | |_) | |_| | (__|   <  __/ |_ \ V  V /  __/ |_) |
        # |____/ \__,_|\___|_|\_\___|\__| \_/\_/ \___|_.__/
        ########################################################################
        bucketweb:
          enabled: true

          logLevel: info

          logFormat: json

          refresh: 30m

          timeout: 5m

          revisionHistoryLimit: 2

          extraFlges:
            - --web.route-prefix=bucket
            - --web.external-prefix=bucket

          serviceAccount:
            create: true

          autoscaling:
            enabled: true
            minReplicas: "1"
            maxReplicas: "4"
            targetCPU: 70
            targetMemory: 80

          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 1
              memory: 2048Mi

          extraEnvVars:
            - name: TZ
              value: "Europe/Amsterdam"

        ########################################################################
        #   ____                                 _
        #  / ___|___  _ __ ___  _ __   __ _  ___| |_ ___  _ __
        # | |   / _ \| '_ ` _ \| '_ \ / _` |/ __| __/ _ \| '__|
        # | |__| (_) | | | | | | |_) | (_| | (__| || (_) | |
        #  \____\___/|_| |_| |_| .__/ \__,_|\___|\__\___/|_|
        #                      |_|
        ########################################################################
        compactor:
          enabled: true
          revisionHistoryLimit: 2

          logFormat: json

          retentionResolutionRaw: 30d
          retentionResolution5m: 30d
          retentionResolution1h: 10y

          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 2
              memory: 2048Mi

          retentionResolutionRaw: 14d

          retentionResolution5m: 30d

          retentionResolution1h: 120d

          consistencyDelay: 30m

          persistence:
            enabled: true
            storageClass: local-path
            size: 32Gi

          serviceAccount:
            create: true

          extraEnvVars:
            - name: "THANOS_ALLOW_EXISTING_BUCKET_USE"
              value: "true"

        ########################################################################
        #  ____  _                                ____       _
        # / ___|| |_ ___  _ __ __ _  __ _  ___   / ___| __ _| |_ _____      ____ _ _   _
        # \___ \| __/ _ \| '__/ _` |/ _` |/ _ \ | |  _ / _` | __/ _ \ \ /\ / / _` | | | |
        #  ___) | || (_) | | | (_| | (_| |  __/ | |_| | (_| | ||  __/\ V  V / (_| | |_| |
        # |____/ \__\___/|_|  \__,_|\__, |\___|  \____|\__,_|\__\___| \_/\_/ \__,_|\__, |
        #                           |___/                                          |___/
        ########################################################################
        storegateway:
          enabled: true

          replicaCount: 2

          logFormat: json

          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 2
              memory: 2048Mi

          autoscaling:
            enabled: true
            minReplicas: "1"
            maxReplicas: "4"
            targetCPU: 70
            targetMemory: 80

          persistence:
            enabled: true
            storageClass: local-path
            size: 8Gi

          serviceAccount:
            create: true

          extraEnvVars:
            - name: "THANOS_ALLOW_EXISTING_BUCKET_USE"
              value: "true"

          readinessProbes:
            enabled: false

          livenessProbes:
            enabled: false

        ########################################################################
        #  ____               _
        # |  _ \ ___  ___ ___(_)_   _____ _ __
        # | |_) / _ \/ __/ _ \ \ \ / / _ \ '__|
        # |  _ <  __/ (_|  __/ |\ V /  __/ |
        # |_| \_\___|\___\___|_| \_/ \___|_|
        ########################################################################
        receive:
          enabled: true

          mode: dual-mode

          logLevel: info

          logFormat: json

          tsdbRetention: 1d

          replicationFactor: 1

          replicaCount: 3

          replicaLabel: replica

          config:
            - endpoints:
              - "thanos-receive-0.thanos-receive-headless.monitoring.svc.cluster.local:10901"
              - "thanos-receive-1.thanos-receive-headless.monitoring.svc.cluster.local:10901"
              - "thanos-receive-2.thanos-receive-headless.monitoring.svc.cluster.local:10901"

          tsdbPath: ""

          existingConfigmap: ""

          extraEnvVars:
            - name: TZ
              value: "Europe/Amsterdam"

          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 1000m
              memory: 4096Mi

          persistence:
            storageClass: local-path
            size: 32Gi

          service:
            additionalHeadless: true
            headless:
              annotations: {}

        ########################################################################
        #  ____  _     _        _ _           _
        # |  _ \(_)___| |_ _ __(_) |__  _   _| |_ ___  _ __
        # | | | | / __| __| '__| | '_ \| | | | __/ _ \| '__|
        # | |_| | \__ \ |_| |  | | |_) | |_| | || (_) | |
        # |____/|_|___/\__|_|  |_|_.__/ \__,_|\__\___/|_|
        ########################################################################
        receiveDistributor:
          enabled: true

          logLevel: debug

          logFormat: json

          replicaLabel: replica

          replicationProtocol: capnproto

          replicaCount: 2

          replicationFactor: 1

          extraEnvVars:
            - name: TZ
              value: "Europe/Amsterdam"

          updateStrategy:
            type: RollingUpdate

          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 2
              memory: 2048Mi

          serviceAccount:
            create: true
        ########################################################################
        #  ____        _
        # |  _ \ _   _| | ___ _ __
        # | |_) | | | | |/ _ \ '__|
        # |  _ <| |_| | |  __/ |
        # |_| \_\\__,_|_|\___|_|
        ########################################################################
        ruler:
          enabled: true

          logFormat: json

          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 2
              memory: 2048Mi

          autoscaling:
            enabled: true
            minReplicas: "1"
            maxReplicas: "4"
            targetCPU: 70
            targetMemory: 80

          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                    - amd64

          extraFlags:
            - --web.route-prefix=ruler
            - --web.external-prefix=ruler
            - --query=https://thanos.buildstars.online/query
            - --rule-file=/extra-rules/*.yml

          sidecars:
            - name: load-rule-configmaps
              image: kiwigrid/k8s-sidecar:1.19.5
              imagePullPolicy: IfNotPresent

          volumeMounts:
            - name: extra-rules
              mountPath: /extra/rules/

          env:
            - name: LABEL
              value: "thanos-ruler-alerts"

            - name: FOLDER
              value: /extra-rules/

            - name: RESOURCE
              value: configmap

            - name: REQ_URL
              value: https://thanos.buildstars.online/ruler/-/reload

            - name: REQ_METHOD
              value: POST

          replicaLabel: replica

          dnsDiscovery:
            enabled: false

          queryURL: "http://thanos-query.monitoring.svc.cluster.local:9090"

          alertmanagers:
            - http://alertmanager:9093

          alertmanagersConfig: {}

          evalInterval: 1m

          clusterName: ""

          existingConfigmap: ""

          extraVolumes:
            - name: extra-rules
              emptyDir: {}

          extraVolumeMounts:
            - name: extra-rules
              mountPath: /extra-rules

          extraEnvVars:
            - name: TZ
              value: "Europe/Amsterdam"

          persistence:
            enabled: true
            storageClass: "local-path"
            size: 8Gi
            annotations: {}

          config: |
            groups:
              - name: general.rules
                rules:
                  - alert: Watchdog
                    annotations:
                      description: "watchdog description"
                      summary: "watchdog summary"
                      runbook_url: "https://icanhazip.com"
                    expr: vector(1)
                    labels:
                    severity: watchdog

        ########################################################################
        #  __  __      _        _
        # |  \/  | ___| |_ _ __(_) ___ ___
        # | |\/| |/ _ \ __| '__| |/ __/ __|
        # | |  | |  __/ |_| |  | | (__\__ \
        # |_|  |_|\___|\__|_|  |_|\___|___/
        ########################################################################
        metrics:
          enabled: true
          serviceMonitor:
            enabled: true
            namespace: monitoring

  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - ApplyOutOfSyncOnly=true
      - Retry=true
    automated:
      selfHeal: false
      prune: true
