---
# webapp is deployed 2nd because we need secrets and persistent volumes up 1st
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: appflowy-postgres-app-set
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  goTemplate: true
  # generator allows us to source specific values from an external k8s secret
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            secret_vars:
              - appflowy_s3_endpoint
  template:
    metadata:
      name: appflowy-postgres-cluster
      namespace: appflowy
      annotations:
        argocd.argoproj.io/sync-wave: "3"
    spec:
      project: appflowy
      destination:
        server: "https://kubernetes.default.svc"
        namespace: appflowy
      syncPolicy:
        syncOptions:
          - ApplyOutOfSyncOnly=true
        automated:
          prune: true
          selfHeal: true
      source:
        repoURL: https://small-hack.github.io/cloudnative-pg-cluster-chart
        chart: cnpg-cluster
        targetRevision: 0.4.0
        helm:
          releaseName: appflowy-postgres-cluster
          values: |
            name: appflowy-postgres
            instances: 1

            bootstrap:
              initdb:
                database: appflowy
                owner: appflowy
                postInitApplicationSQLRefs:
                  secretRefs:
                  - name: postgres-init-script
                    key: init.sql

            backup:
              # barman is a utility for backing up postgres to s3
              barmanObjectStore:
                destinationPath: "s3://appflowy-postgres"
                endpointURL: "https://{{ .appflowy_s3_endpoint }}"
                s3Credentials:
                  accessKeyId:
                    name: postgres-s3-credentials
                    key: "S3_USER"
                  secretAccessKey:
                    name: postgres-s3-credentials
                    key: "S3_PASSWORD"
              retentionPolicy: "7d"

            certificates:
              server:
                enabled: true
                generate: true
              client:
                enabled: true
                generate: true
              user:
                enabled: true
                username:
                  - "supabase_auth_admin"
                  - "appflowy"
                  - "postgres"

            scheduledBackup:
              name: appflowy-pg-backup
              spec:
                # hourly backups for postgres data
                schedule: "0 0 * * * *"
                backupOwnerReference: self
                cluster:
                  name: appflowy-postgres

            monitoring:
              enablePodMonitor: false

            postgresql:
              pg_hba:
                - hostnossl all all 0.0.0.0/0 reject
                - hostssl all all 0.0.0.0/0 cert clientcert=verify-full
