---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: valkey-app
  namespace: argocd
  annotations:
    # wait till after secrets are populated in sync wave 1
    argocd.argoproj.io/sync-wave: "2"
spec:
  project: {{ .Values.app }}

  # the sync policy for this Argo CD Application
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - ApplyOutOfSyncOnly=true
    automated:
      prune: true
      selfHeal: true

  # where this Argo CD Application should be deployed
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ .Values.app }}

  # where we should get the source of this Argo CD Application
  source:
    repoURL: 'registry-1.docker.io'
    chart: bitnamicharts/valkey
    targetRevision: 2.0.0
    helm:
      # helm parameter overrides
      valuesObject:
        fullnameOverride: "valkey-{{ .Values.app }}"

        global:
          storageClass: "{{ .Value.storageClass }}"

        # for auth, we get the valkey credentials from an ExternalSecret
        auth:
          enabled: true
          existingSecret: "valkey-credentials"
          existingSecretPasswordKey: "password"

        # TLS settings
        tls:
          enabled: false
          authClients: true
          autoGenerated: false

        # primary (control plane) configuration
        primary:
          persistence:
            enabled: true
            existingClaim: "valkey-primary"

        # valkey replica configuration
        replica:
          persistence:
            enabled: true
            existingClaim: "valkey-replica"


        # persistnent volume retention policy for the StatefulSet
        persistentVolumeClaimRetentionPolicy:
          enabled: true
          whenScaled: Retain
          whenDeleted: Retain

        metrics:
          # we use a grafana exporter that logs into valkey directly
          enabled: false

        # definitions: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
        # Options: nano, micro, small, medium, large, xlarge, 2xlarge
        # default: nano
        resourcesPreset: "small"
