---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: filestash-argo-app
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  project: argo-cd
  destination:
    server: "https://kubernetes.default.svc"
    namespace: argocd
  syncPolicy:
    syncOptions:
      - ApplyOutOfSyncOnly=true
    automated:
      prune: true
      selfHeal: true
  source:
    # official helm repo
    repoURL: 'https://sebagarayco.github.io/helm-filestash'
    chart: filestash
    targetRevision: 0.2.0
    helm:
      valuesObject:
        # Default values for filestash.
        # This is a YAML-formatted file.
        # Declare variables to be passed into your templates.
        replicaCount: 1

        image:
          repository: docker.io/machines/filestash
          pullPolicy: IfNotPresent
          # Overrides the image tag whose default is the chart appVersion.
          tag: ""

        imagePullSecrets: []
        nameOverride: "filestash"
        fullnameOverride: ""

        # Environment variables passed to filestash
        env: []
          # - name: TZ
          #   value: UTC

        serviceAccount:
          # Specifies whether a service account should be created
          create: true
          # Annotations to add to the service account
          annotations: {}
          # The name of the service account to use.
          # If not set and create is true, a name is generated using the fullname template
          name: ""

        podAnnotations: {}

        podSecurityContext: {}
          # fsGroup: 2000

        securityContext: {}
          # capabilities:
          #   drop:
          #   - ALL
          # readOnlyRootFilesystem: true
          # runAsNonRoot: true
          # runAsUser: 1000

        documentServer:
          enabled: false
          nameOverride: "document-server"
          fullnameOverride: ""
          image:
            repository: onlyoffice/documentserver
            pullPolicy: IfNotPresent
            tag: ""
          replicaCount: 1
          # Environment variables passed to document server
          env: []
            # - name: TZ
            #   value: UTC

          service:
            type: ClusterIP
            port: 80

        service:
          type: ClusterIP
          port: 8334

        ingress:
          enabled: true
          className: "nginx"
          # Set "isTraefik: true" if Traefik is the ingress provider. When true, a middleware
          # is created that adds an "X-Forwarded-Proto: https" header, and an annotation is
          # added to the ingress to attach this middleware. Document server integration with
          # filestash does not work correctly with traefik if this is not done.
          isTraefik: false
          annotations:
            # kubernetes.io/ingress.class: nginx
            kubernetes.io/tls-acme: "true"
            cert-manager.io/cluster-issuer: letsencrypt-prod
          hosts:
            - host: artifacts.workflows.buildstar.online
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - secretName: workflow-artifacts-tls
              hosts:
                - artifacts.workflows.buildstar.online

        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi

        autoscaling:
          enabled: false
          minReplicas: 1
          maxReplicas: 4
          targetCPUUtilizationPercentage: 80
          targetMemoryUtilizationPercentage: 80

        nodeSelector: {}

        persistence:
          filestashState:
            enabled: true
            accessMode: ReadWriteOnce
            storageClass: "local-path"
            storageSize: 512Mi

        tolerations: []

        affinity: {}
