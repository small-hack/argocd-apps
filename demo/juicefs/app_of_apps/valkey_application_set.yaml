---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: juicefs-valkey-app-set
  namespace: argocd
  annotations:
    # wait till after secrets are populated in sync wave 1
    argocd.argoproj.io/sync-wave: "2"
spec:
  goTemplate: true
  # generator allows us to source specific values from an external k8s secret
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            secret_vars:
              - juicefs_valkey_pvc_storage_class
              - juicefs_valkey_pvc_size
  template:
    metadata:
      name: juicefs-valkey-app
      annotations:
        argocd.argoproj.io/sync-wave: "2"
    spec:
      project: juicefs

      # the sync policy for this Argo CD Application
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - ApplyOutOfSyncOnly=true
        automated:
          prune: true
          selfHeal: true

      # where this Argo CD Application should be deployed
      destination:
        server: https://kubernetes.default.svc
        namespace: juicefs

      # where we should get the source of this Argo CD Application
      source:
        repoURL: 'registry-1.docker.io'
        chart: bitnamicharts/valkey-cluster
        targetRevision: 3.0.24
        helm:
          # helm parameter overrides
          valuesObject:
            global:
              storageClass: "{{ .juicefs_valkey_pvc_storage_class }}"

            fullnameOverride: "juicefs-valkey"

            usePassword: true
            existingSecret: "juicefs-valkey-credentials"
            existingSecretPasswordKey: "password"

            tls:
              enabled: false
              authClients: true
              autoGenerated: false

            service:
              ports:
                valkey: 6379
              type: ClusterIP
              loadBalancerIP: ""
              loadBalancerSourceRanges: []
              externalTrafficPolicy: Cluster

            persistence:
              enabled: true
              path: /bitnami/valkey/data
              annotations:
                k8up.io/backup: "true"
              accessModes:
                - ReadWriteOnce
              size: "{{ .juicefs_valkey_pvc_size }}"

            persistentVolumeClaimRetentionPolicy:
              enabled: true
              whenScaled: Retain
              whenDeleted: Retain

            valkey:
              configmap: |
                maxmemory 6gb
                maxmemory-policy allkeys-lru

              updateStrategy:
                type: RollingUpdate
                rollingUpdate:
                  partition: 0

              podManagementPolicy: Parallel
              automountServiceAccountToken: false
              hostNetwork: false
              useAOFPersistence: "no"

              containerPorts:
                valkey: 6379
                bus: 16379

              # definitions: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
              # Options: nano, micro, small, medium, large, xlarge, 2xlarge
              # default: nano
              #resourcesPreset: "micro"
              resources:
                requests:
                  cpu: 100m
                  memory: 1Gi
                limits:
                  cpu: 2000m
                  memory: 10Gi

            cluster:
              init: true
              nodes: 3
              replicas: 1
              externalAccess:
                enabled: false
                hostMode: false
                service:
                  disableLoadBalancerIP: false
                  type: LoadBalancer
                  port: 6379
                  loadBalancerIP: []
                  loadBalancerSourceRanges: []

            metrics:
              enabled: true
              resourcesPreset: "small"
              serviceMonitor:
                enabled: true
                interval: 10s
                scrapeTimeout: 5s
