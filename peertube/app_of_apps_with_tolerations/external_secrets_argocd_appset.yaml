---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: peertube-external-secrets-app-set
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  goTemplate: true
  # generator allows us to source specific values from an external k8s secret
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            secret_vars:
              - global_external_secrets
              - peertube_admin_credentials_bitwarden_id
              - peertube_secret_bitwarden_id
              - peertube_oidc_credentials_bitwarden_id
              - peertube_postgres_credentials_bitwarden_id
              - peertube_s3_provider
              - peertube_s3_admin_credentials_bitwarden_id
              - peertube_s3_peertube_credentials_bitwarden_id
              - peertube_s3_postgres_credentials_bitwarden_id
              - peertube_s3_backups_credentials_bitwarden_id
              - peertube_smtp_credentials_bitwarden_id
              - peertube_valkey_bitwarden_id
              - peertube_s3_orig_video_bucket
              - peertube_s3_web_video_bucket
              - peertube_s3_streaming_bucket
              - peertube_s3_user_exports_bucket
  template:
    metadata:
      name: peertube-external-secrets
    spec:
      project: peertube
      destination:
        server: https://kubernetes.default.svc
        namespace: peertube
      syncPolicy:
        syncOptions:
          - ApplyOutOfSyncOnly=true
        automated:
          prune: true
          selfHeal: true
      source:
        repoURL: 'https://github.com/small-hack/argocd-apps.git'
        path: peertube/external_secrets/
        targetRevision: main
        helm:
          valuesObject:
            # use bitwarden provider
            provider: "{{ .global_external_secrets }}"

            # needed to initialize peertube
            adminCredentialsBitwardenID: "{{ .peertube_admin_credentials_bitwarden_id }}"
            secretBitwardenID: "{{ .peertube_secret_bitwarden_id }}"

            # valkey or redis credentials
            valkeyCredentialsBitwardenID: "{{ .peertube_valkey_bitwarden_id }}"

            # postgres
            pgsqlCredentialsBitwardenID: "{{ .peertube_postgres_credentials_bitwarden_id }}"

            # OIDC
            oidcCredentialsBitwardenID: '{{ .peertube_oidc_credentials_bitwarden_id }}'

            # mail
            smtpCredentialsBitwardenID: "{{ .peertube_smtp_credentials_bitwarden_id }}"

            # s3 related secrets
            s3_provider: "{{ .peertube_s3_provider }}"
            s3AdminCredentialsBitwardenID: "{{ .peertube_s3_admin_credentials_bitwarden_id }}"
            s3PeertubeCredentialsBitwardenID: "{{ .peertube_s3_peertube_credentials_bitwarden_id }}"
            s3PostgresCredentialsBitwardenID: "{{ .peertube_s3_postgres_credentials_bitwarden_id }}"
            s3BackupCredentialsBitwardenID: "{{ .peertube_s3_backups_credentials_bitwarden_id }}"

            s3_buckets:
              orig_video: "{{ .peertube_s3_orig_video_bucket }}"
              web_video: "{{ .peertube_s3_web_video_bucket }}"
              streaming: "{{ .peertube_s3_streaming_bucket }}"
              user_exports: "{{ .peertube_s3_user_exports_bucket }}"
