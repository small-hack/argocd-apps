---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: peertube-s3-bucket-ingresses-app-set
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  goTemplate: true
  # generator allows us to source specific values from an external k8s secret
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            secret_vars:
              - global_cluster_issuer
              - peertube_s3_endpoint
              - peertube_s3_orig_video_bucket
              - peertube_s3_web_video_bucket
              - peertube_s3_streaming_bucket
              - peertube_s3_user_exports_bucket
  template:
    metadata:
      name: peertube-s3-bucket-ingresses
    spec:
      project: peertube
      destination:
        server: https://kubernetes.default.svc
        namespace: peertube
      syncPolicy:
        syncOptions:
          - ApplyOutOfSyncOnly=true
        automated:
          prune: true
          selfHeal: true
      source:
        repoURL: 'https://github.com/small-hack/argocd-apps.git'
        path: s3_bucket_ingresses/
        targetRevision: main
        helm:
          releaseName: peertube-s3-bucket-ingresses
          valuesObject:
            # -- Ingress class name
            className: "nginx"

            # -- any annotations you want on this Kubernetes Ingress
            annotations:
                cert-manager.io/cluster-issuer: "{{ .global_cluster_issuer }}"
                nginx.ingress.kubernetes.io/proxy-body-size: "4096m"

            # -- main s3 hostname in {bucket}.{s3_hostname} We will template the bucket names
            s3_hostname: "{{ .peertube_s3_endpoint }}"

            # -- all bucket names to create ingresses and certs for
            buckets:
              - "{{ .peertube_s3_orig_video_bucket }}"
              - "{{ .peertube_s3_web_video_bucket }}"
              - "{{ .peertube_s3_streaming_bucket }}"
              - "{{ .peertube_s3_user_exports_bucket }}"
