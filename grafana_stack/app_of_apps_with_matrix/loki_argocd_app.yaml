---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "4"

spec:
  project: monitoring

  # where to put the argocd app
  destination:
    server: "https://kubernetes.default.svc"
    namespace: monitoring

  # how to sync the argocd app
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - ApplyOutOfSyncOnly=true
      - Retry=true

    automated:
      selfHeal: true
      prune: true

  source:
    # Official Grafana Loki helm chart
    # https://github.com/grafana/loki/tree/main/production/helm/loki
    repoURL: ghcr.io/grafana/helm-charts
    chart: loki
    # this'll be set automatically by kargo down the line
    targetRevision: 6.36.1
    helm:
      releaseName: loki
      skipCrds: true
      # values for the loki helm chart
      # https://github.com/grafana/loki/blob/main/production/helm/loki/values.yaml
      valuesObject:
        fullnameOverride: loki

        # Note: Distributed REQUIRES the use of object storage.
        deploymentMode: Distributed

        # disables SSD mode
        write:
          replicas: 0
        read:
          replicas: 0
        backend:
          replicas: 0
        # disables sbd mode
        singleBinary:
          replicas: 0

        # this is only used for memcache which we don't use
        chunksCache:
          enabled: false
        resultsCache:
          enabled: false

        test:
          # don't use the chart's testing params
          enabled: false

        # bloom stuff is all experimental still
        bloomPlanner:
          replicas: 0
        bloomBuilder:
          replicas: 0
        BloomGateway:
          replicas: 0

        # DEPRECATED Monitoring section determines which monitoring features to
        # enable, this section is being replaced by:
        # https://github.com/grafana/meta-monitoring-chart
        monitoring:
          dashboards:
            enabled: true
          serviceMonitor:
            enabled: true
            interval: 10s

        # Configuration for the memberlist service
        memberlist:
          service:
            publishNotReadyAddresses: true

        global:
          # need this to expand env variables in configs
          extraArgs:
            - -config.expand-env=true

          extraEnv:
            # we need this for the memberlist ring sync thing
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP

            # we need this for valkey
            - name: VALKEY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: loki-valkey-credentials
                  key: password

          # need this for the S3 credentials
          extraEnvFrom:
            - secretRef:
                name: s3-loki-credentials

        loki:
          configStorageType: Secret
          # comes from an externalsecret so we can pass in S3 credentials securely
          configObjectName: loki-config

          query_scheduler:
            enabled: false

          pattern_ingester:
            enabled: true

          # Check here for more info on how to configure schemas:
          # https://grafana.com/docs/loki/latest/configuration/#schema_config
          schemaConfig:
            configs:
              - from: 2025-04-01
                store: tsdb
                object_store: s3
                schema: v13
                index:
                  prefix: index_
                  period: 24h

          storage:
            bucketNames:
              chunks: chunks
              ruler: ruler

          storage_config:
            tsdb_shipper:
              active_index_directory: /var/loki/tsdb-index
              cache_location: /var/loki/tsdb-cache
              index_gateway_client:
                # only applicable if using microservices where index-gateways are independently deployed.
                # This example is using kubernetes-style naming.
                server_address: dns:///loki-index-gateway.monitoring.svc.cluster.local:9095
              shared_store: s3

        # I don't think we need this yet
        queryScheduler:
          replicas: 1

        # compacts the tsdb volume
        compactor:
          replicas: 1

        # allows querying from grafana, cli, and api
        querier:
          replicas: 2

        # manages distribution of requests to queriers
        queryFrontend:
          replicas: 2
          maxUnavailable: 1

        # -- Configuration for the index-gateway
        indexGateway:
          # -- Number of replicas for the index-gateway
          replicas: 1

        # --  Configuration for the distributor
        distributor:
          # -- Number of replicas for the distributor
          replicas: 1

        # ingester consumes metrics from alloy
        ingester:
          # set this to 0 when autocaling is on
          replicas: 0
          nodeSelector: null

          autoscaling:
            # -- Enable autoscaling for the ingester
            enabled: true
            # -- Minimum autoscaling replicas for the ingester
            minReplicas: 2
            # -- Maximum autoscaling replicas for the ingester
            maxReplicas: 3
            # -- Target CPU utilisation percentage for the ingester
            targetCPUUtilizationPercentage: 75
            # -- Target memory utilisation percentage for the ingester
            targetMemoryUtilizationPercentage: 80

          zoneAwareReplication:
            # -- Enable zone awareness.
            enabled: false

          podLabels:
            loki-component: ingester

          # -- topologySpread for ingester pods.
          # @default -- Defaults to allow skew no more than 1 node
          topologySpreadConstraints:
            - maxSkew: 3
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: ScheduleAnyway
              labelSelector:
                matchLabels:
                  loki-component: ingester

          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchLabels:
                      loki-component: ingester
                  topologyKey: kubernetes.io/hostname

        # The Loki canary pushes logs to and queries from this loki installation
        # to test that it's working correctly
        lokiCanary:
          enabled: false
          # This can be a DaemonSet or Deployment.
          kind: DaemonSet

