---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: mimir-config
spec:
  target:
    # Name for the secret to be created on the cluster
    name: mimir-config
    deletionPolicy: Delete
    template:
      engineVersion: v2
      data:
        mimir.yaml: |
          common:
            storage:
              backend: s3
              s3:
                endpoint: {{ `{{ .s3_endpoint }}` }}
                access_key_id: {{ `{{ .secret_access_key_id }}` }}
                secret_access_key: {{ `{{ .secret_secret_access_key }}` }}
                http:
                  insecure_skip_verify: true

          activity_tracker:
            filepath: /active-query-tracker/activity.log

          alertmanager:
            data_dir: /data
            enable_api: true
            external_url: /alertmanager
            fallback_config_file: /configs/alertmanager_fallback_config.yaml

          alertmanager_storage:
            s3:
              bucket_name: mimir-alertmanager


          blocks_storage:
            s3:
              bucket_name: mimir-blocks
            backend: s3
            bucket_store:
              sync_dir: /data/tsdb-sync
            tsdb:
              dir: /data/tsdb
              head_compaction_interval: 15m
              wal_replay_concurrency: 3

          compactor:
            compaction_interval: 30m
            data_dir: /data
            deletion_delay: 2h
            first_level_compaction_wait_period: 25m
            max_closing_blocks_concurrency: 2
            max_opening_blocks_concurrency: 4
            sharding_ring:
              heartbeat_period: 1m
              heartbeat_timeout: 4m
              wait_stability_min_duration: 1m
            symbols_flushers_concurrency: 4

          distributor:
            ring:
              heartbeat_period: 1m
              heartbeat_timeout: 4m

          frontend:
            parallelize_shardable_queries: true
            scheduler_address: mimir-query-scheduler-headless.monitoring.svc:9095

          frontend_worker:
            grpc_client_config:
              max_send_msg_size: 419430400
            scheduler_address: mimir-query-scheduler-headless.monitoring.svc:9095

          ingester:
            ring:
              final_sleep: 0s
              heartbeat_period: 2m
              heartbeat_timeout: 10m
              num_tokens: 512
              tokens_file_path: /data/tokens
              unregister_on_shutdown: false

          ingester_client:
            grpc_client_config:
              max_recv_msg_size: 104857600
              max_send_msg_size: 104857600

          limits:
            max_cache_freshness: 10m
            max_query_parallelism: 240
            max_total_query_length: 12000h

          memberlist:
            abort_if_cluster_join_fails: false
            compression_enabled: false
            join_members:
            - dns+mimir-gossip-ring.monitoring.svc.cluster.local.:7946

          querier:
            max_concurrent: 16

          query_scheduler:
            max_outstanding_requests_per_tenant: 800

          ruler:
            alertmanager_url: dnssrvnoa+http://_http-metrics._tcp.mimir-alertmanager-headless.monitoring.svc.cluster.local./alertmanager
            enable_api: true
            rule_path: /data

          ruler_storage:
            s3:
              bucket_name: mimir-ruler


          runtime_config:
            file: /var/mimir/runtime.yaml

          store_gateway:
            sharding_ring:
              heartbeat_period: 1m
              heartbeat_timeout: 10m
              tokens_file_path: /data/tokens
              unregister_on_shutdown: false
              wait_stability_min_duration: 1m

          usage_stats:
            installation_mode: helm

  data:
    # S3 Endpoint
    - secretKey: s3_endpoint
      sourceRef:
        storeRef:
          name: bitwarden-fields
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.s3MimirCredentialsBitwardenID }}
        property: endpoint

    # Alertmanager Bucket
    #- secretKey: alertmanager_bucket
    #  sourceRef:
    #    storeRef:
    #      name: bitwarden-fields
    #      kind: ClusterSecretStore
    #  remoteRef:
    #    key: {{ .Values.s3MimirCredentialsBitwardenID }}
    #    property: alertmanager_bucket

    # Secret Access Key ID
    - secretKey: secret_access_key_id
      sourceRef:
        storeRef:
          name: bitwarden-login
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.s3MimirCredentialsBitwardenID }}
        property: username

    # Secret Access Key
    - secretKey: secret_access_key_id
      sourceRef:
        storeRef:
          name: bitwarden-login
          kind: ClusterSecretStore
      remoteRef:
        key: {{ .Values.s3MimirCredentialsBitwardenID  }}
        property: password

    # Ruler Bucket
    #- secretKey: ruler_bucket
    #  sourceRef:
    #    storeRef:
    #      name: bitwarden-fields
    #      kind: ClusterSecretStore
    #  remoteRef:
    #    key: {{ .Values.s3MimirCredentialsBitwardenID }}
    #    property: ruler_bucket

    # Blocks Bucket
    #- secretKey: blocks_bucket
    #  sourceRef:
    #    storeRef:
    #      name: bitwarden-fields
    #      kind: ClusterSecretStore
    #  remoteRef:
    #    key: {{ .Values.s3MimirCredentialsBitwardenID }}
        property: blocks_bucket
